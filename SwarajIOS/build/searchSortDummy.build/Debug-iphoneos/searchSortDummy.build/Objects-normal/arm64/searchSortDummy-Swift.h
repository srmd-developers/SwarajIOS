// Generated by Apple Swift version 5.9 (swiftlang-5.9.0.128.108 clang-1500.0.40.1)
#ifndef SEARCHSORTDUMMY_SWIFT_H
#define SEARCHSORTDUMMY_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import AVFAudio;
@import CoreFoundation;
@import CoreGraphics;
@import FirebaseMessaging;
@import Foundation;
@import MessageUI;
@import ObjectiveC;
@import QuartzCore;
@import UIKit;
@import UserNotifications;
@import WebKit;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="searchSortDummy",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
@class UILabel;
@class NSString;
@class NSCoder;

SWIFT_CLASS("_TtC15searchSortDummy25ActivityListTableViewCell")
@interface ActivityListTableViewCell : UITableViewCell
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified weekTitleLabl;
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified durationLabl;
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified numberOfTimesLabl;
- (void)awakeFromNib;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=3.0);
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class UIWindow;
@class UIApplication;
@class NSData;
@class UNUserNotificationCenter;
@class UNNotificationResponse;
@class UNNotification;
@class NSObject;
@class FIRMessaging;
@class NSNotification;

SWIFT_CLASS("_TtC15searchSortDummy11AppDelegate")
@interface AppDelegate : UIResponder <AVAudioPlayerDelegate, FIRMessagingDelegate, UIApplicationDelegate, UNUserNotificationCenterDelegate>
@property (nonatomic, strong) UIWindow * _Nullable window;
- (BOOL)application:(UIApplication * _Nonnull)application didFinishLaunchingWithOptions:(NSDictionary<UIApplicationLaunchOptionsKey, id> * _Nullable)launchOptions SWIFT_WARN_UNUSED_RESULT;
- (void)application:(UIApplication * _Nonnull)application didRegisterForRemoteNotificationsWithDeviceToken:(NSData * _Nonnull)deviceToken;
- (void)userNotificationCenter:(UNUserNotificationCenter * _Nonnull)center didReceiveNotificationResponse:(UNNotificationResponse * _Nonnull)response withCompletionHandler:(void (^ _Nonnull)(void))completionHandler SWIFT_AVAILABILITY(ios,introduced=10.0);
- (void)userNotificationCenter:(UNUserNotificationCenter * _Nonnull)center willPresentNotification:(UNNotification * _Nonnull)notification withCompletionHandler:(void (^ _Nonnull)(UNNotificationPresentationOptions))completionHandler SWIFT_AVAILABILITY(ios,introduced=10.0);
- (void)application:(UIApplication * _Nonnull)application didReceiveRemoteNotification:(NSDictionary * _Nonnull)userInfo;
- (void)application:(UIApplication * _Nonnull)application didReceiveRemoteNotification:(NSDictionary * _Nonnull)userInfo fetchCompletionHandler:(void (^ _Nonnull)(UIBackgroundFetchResult))completionHandler;
- (void)messaging:(FIRMessaging * _Nonnull)messaging didReceiveRegistrationToken:(NSString * _Nullable)fcmToken;
- (void)applicationWillResignActive:(UIApplication * _Nonnull)application;
- (void)applicationDidEnterBackground:(UIApplication * _Nonnull)application;
- (void)applicationWillEnterForeground:(UIApplication * _Nonnull)application;
- (void)applicationDidBecomeActive:(UIApplication * _Nonnull)application;
- (void)applicationWillTerminate:(UIApplication * _Nonnull)application;
- (void)networkStatusChanged:(NSNotification * _Nonnull)notification;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC15searchSortDummy11AsyncButton")
@interface AsyncButton : UIButton
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class UIImage;

SWIFT_CLASS("_TtC15searchSortDummy14AsyncImageView")
@interface AsyncImageView : UIImageView
- (nonnull instancetype)initWithImage:(UIImage * _Nullable)image OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithImage:(UIImage * _Nullable)image highlightedImage:(UIImage * _Nullable)highlightedImage OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=3.0);
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// The view for an individual page of the scroll view containing an image.
SWIFT_CLASS("_TtC15searchSortDummy7AukPage")
@interface AukPage : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class UIPageControl;

/// View containing a UIPageControl object that shows the dots for present pages.
SWIFT_CLASS("_TtC15searchSortDummy25AukPageIndicatorContainer")
@interface AukPageIndicatorContainer : UIView
- (void)didTapPageControl:(UIPageControl * _Nonnull)control;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class UIScrollView;

/// This delegate detects the scrolling event which is used for loading remote images when their superview becomes visible on screen.
SWIFT_CLASS("_TtC15searchSortDummy21AukScrollViewDelegate")
@interface AukScrollViewDelegate : NSObject <UIScrollViewDelegate>
- (void)scrollViewDidScroll:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewDidZoom:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewWillBeginDragging:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewWillEndDragging:(UIScrollView * _Nonnull)scrollView withVelocity:(CGPoint)velocity targetContentOffset:(CGPoint * _Nonnull)targetContentOffset;
- (void)scrollViewDidEndDragging:(UIScrollView * _Nonnull)scrollView willDecelerate:(BOOL)decelerate;
- (void)scrollViewWillBeginDecelerating:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewDidEndDecelerating:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewDidEndScrollingAnimation:(UIScrollView * _Nonnull)scrollView;
- (UIView * _Nullable)viewForZoomingInScrollView:(UIScrollView * _Nonnull)scrollView SWIFT_WARN_UNUSED_RESULT;
- (void)scrollViewWillBeginZooming:(UIScrollView * _Nonnull)scrollView withView:(UIView * _Nullable)view;
- (void)scrollViewDidEndZooming:(UIScrollView * _Nonnull)scrollView withView:(UIView * _Nullable)view atScale:(CGFloat)scale;
- (BOOL)scrollViewShouldScrollToTop:(UIScrollView * _Nonnull)scrollView SWIFT_WARN_UNUSED_RESULT;
- (void)scrollViewDidScrollToTop:(UIScrollView * _Nonnull)scrollView;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSTimer;

SWIFT_CLASS("_TtC15searchSortDummy27AutoCancellingTimerInstance")
@interface AutoCancellingTimerInstance : NSObject
- (void)timerFired:(NSTimer * _Nonnull)timer;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSTextContainer;

SWIFT_CLASS("_TtC15searchSortDummy12AutoTextView")
@interface AutoTextView : UITextView
@property (nonatomic, readonly) CGSize intrinsicContentSize;
- (nonnull instancetype)initWithFrame:(CGRect)frame textContainer:(NSTextContainer * _Nullable)textContainer OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=7.0);
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class UIColor;
@class UITapGestureRecognizer;
@class UISwipeGestureRecognizer;

/// Banner is a dropdown notification view that presents above the main view controller, but below the status bar.
SWIFT_CLASS("_TtC15searchSortDummy6Banner")
@interface Banner : UIView
/// The color of the background view. Defaults to <code>nil</code>.
@property (nonatomic, strong) UIColor * _Nullable backgroundColor;
/// The opacity of the background view. Defaults to 0.95.
@property (nonatomic) CGFloat alpha;
- (void)didTap:(UITapGestureRecognizer * _Nonnull)recognizer;
- (void)didSwipe:(UISwipeGestureRecognizer * _Nonnull)recognizer;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)didMoveToSuperview;
- (void)layoutSubviews;
- (void)playSound;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end

@class NSBundle;

SWIFT_CLASS("_TtC15searchSortDummy12CAPSPageMenu")
@interface CAPSPageMenu : UIViewController <UIGestureRecognizerDelegate, UIScrollViewDelegate>
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly) BOOL shouldAutomaticallyForwardAppearanceMethods;
- (BOOL)shouldAutomaticallyForwardRotationMethods SWIFT_WARN_UNUSED_RESULT;
- (void)scrollViewDidScroll:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewDidEndDecelerating:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewDidEndTapScrollingAnimation;
- (void)viewDidLayoutSubviews;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


SWIFT_PROTOCOL("_TtP15searchSortDummy20CAPSPageMenuDelegate_")
@protocol CAPSPageMenuDelegate
@optional
- (void)willMoveToPageWithController:(UIViewController * _Nonnull)controller index:(NSInteger)index;
- (void)didMoveToPageWithController:(UIViewController * _Nonnull)controller index:(NSInteger)index;
@end

@class UITouch;
@class UIEvent;

/// A star rating view that can be used to show customer rating for the products. On can select stars by tapping on them when updateOnTouch settings is true. An optional text can be supplied that is shown on the right side.
/// Example:
/// \code
/// cosmosView.rating = 4
/// cosmosView.text = "(123)"
///
/// \endcodeShows: ★★★★☆ (132)
IB_DESIGNABLE
SWIFT_CLASS("_TtC15searchSortDummy10CosmosView")
@interface CosmosView : UIView
/// The currently shown number of stars, usually between 1 and 5. If the value is decimal the stars will be shown according to the Fill Mode setting.
@property (nonatomic) IBInspectable double rating;
/// Currently shown text. Set it to nil to display just the stars without text.
@property (nonatomic, copy) IBInspectable NSString * _Nullable text;
/// Draws the stars when the view comes out of storyboard with default settings
- (void)awakeFromNib;
/// Initializes and returns a newly allocated cosmos view object.
- (nonnull instancetype)init;
/// Initializes and returns a newly allocated cosmos view object with the specified frame rectangle.
/// \param frame The frame rectangle for the view.
///
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
/// Initializes and returns a newly allocated cosmos view object.
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
/// Returns the content size to fit all the star and text layers.
@property (nonatomic, readonly) CGSize intrinsicContentSize;
/// Called by the system in accessibility voice-over mode when the value is incremented by the user.
- (void)accessibilityIncrement;
/// Called by the system in accessibility voice-over mode when the value is decremented by the user.
- (void)accessibilityDecrement;
/// Overriding the function to detect the first touch gesture.
- (void)touchesBegan:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
/// Overriding the function to detect touch move.
- (void)touchesMoved:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
/// Detecting event when the user lifts their finger.
- (void)touchesEnded:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
/// Increase the hitsize of the view if it’s less than 44px for easier touching.
- (BOOL)pointInside:(CGPoint)point withEvent:(UIEvent * _Nullable)event SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic) IBInspectable NSInteger totalStars;
@property (nonatomic) IBInspectable double starSize;
@property (nonatomic, strong) IBInspectable UIColor * _Nonnull filledColor;
@property (nonatomic, strong) IBInspectable UIColor * _Nonnull emptyColor;
@property (nonatomic, strong) IBInspectable UIColor * _Nonnull emptyBorderColor;
@property (nonatomic) IBInspectable double emptyBorderWidth;
@property (nonatomic, strong) IBInspectable UIColor * _Nonnull filledBorderColor;
@property (nonatomic) IBInspectable double filledBorderWidth;
@property (nonatomic) IBInspectable double starMargin;
@property (nonatomic) IBInspectable NSInteger fillMode;
@property (nonatomic) IBInspectable double textSize;
@property (nonatomic) IBInspectable double textMargin;
@property (nonatomic, strong) IBInspectable UIColor * _Nonnull textColor;
@property (nonatomic) IBInspectable BOOL updateOnTouch;
@property (nonatomic) IBInspectable double minTouchRating;
/// Draw the stars in interface buidler
- (void)prepareForInterfaceBuilder;
@end

@class CALayer;

SWIFT_PROTOCOL("_TtP15searchSortDummy10Springable_")
@protocol Springable
@property (nonatomic) BOOL autostart;
@property (nonatomic) BOOL autohide;
@property (nonatomic, copy) NSString * _Nonnull animation;
@property (nonatomic) CGFloat force;
@property (nonatomic) CGFloat delay;
@property (nonatomic) CGFloat duration;
@property (nonatomic) CGFloat damping;
@property (nonatomic) CGFloat velocity;
@property (nonatomic) float repeatCount;
@property (nonatomic) CGFloat x;
@property (nonatomic) CGFloat y;
@property (nonatomic) CGFloat scaleX;
@property (nonatomic) CGFloat scaleY;
@property (nonatomic) CGFloat rotate;
@property (nonatomic) CGFloat opacity;
@property (nonatomic) BOOL animateFrom;
@property (nonatomic, copy) NSString * _Nonnull curve;
@property (nonatomic, readonly, strong) CALayer * _Nonnull layer;
@property (nonatomic) CGAffineTransform transform;
@property (nonatomic) CGFloat alpha;
- (void)animate;
- (void)animateNextWithCompletion:(void (^ _Nonnull)(void))completion;
- (void)animateTo;
- (void)animateToNextWithCompletion:(void (^ _Nonnull)(void))completion;
@end


SWIFT_CLASS("_TtC15searchSortDummy12SpringButton")
@interface SpringButton : UIButton <Springable>
@property (nonatomic) IBInspectable BOOL autostart;
@property (nonatomic) IBInspectable BOOL autohide;
@property (nonatomic, copy) IBInspectable NSString * _Nonnull animation;
@property (nonatomic) IBInspectable CGFloat force;
@property (nonatomic) IBInspectable CGFloat delay;
@property (nonatomic) IBInspectable CGFloat duration;
@property (nonatomic) IBInspectable CGFloat damping;
@property (nonatomic) IBInspectable CGFloat velocity;
@property (nonatomic) IBInspectable float repeatCount;
@property (nonatomic) IBInspectable CGFloat x;
@property (nonatomic) IBInspectable CGFloat y;
@property (nonatomic) IBInspectable CGFloat scaleX;
@property (nonatomic) IBInspectable CGFloat scaleY;
@property (nonatomic) IBInspectable CGFloat rotate;
@property (nonatomic, copy) IBInspectable NSString * _Nonnull curve;
@property (nonatomic) CGFloat opacity;
@property (nonatomic) BOOL animateFrom;
- (void)awakeFromNib;
- (void)layoutSubviews;
- (void)animate;
- (void)animateNextWithCompletion:(void (^ _Nonnull)(void))completion;
- (void)animateTo;
- (void)animateToNextWithCompletion:(void (^ _Nonnull)(void))completion;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


IB_DESIGNABLE
SWIFT_CLASS("_TtC15searchSortDummy16DesignableButton")
@interface DesignableButton : SpringButton
@property (nonatomic, strong) IBInspectable UIColor * _Nonnull borderColor;
@property (nonatomic) IBInspectable CGFloat borderWidth;
@property (nonatomic) IBInspectable CGFloat cornerRadius;
@property (nonatomic, strong) IBInspectable UIColor * _Nonnull shadowColor;
@property (nonatomic) IBInspectable CGFloat shadowRadius;
@property (nonatomic) IBInspectable CGFloat shadowOpacity;
@property (nonatomic) IBInspectable CGFloat shadowOffsetY;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC15searchSortDummy15SpringImageView")
@interface SpringImageView : UIImageView <Springable>
@property (nonatomic) IBInspectable BOOL autostart;
@property (nonatomic) IBInspectable BOOL autohide;
@property (nonatomic, copy) IBInspectable NSString * _Nonnull animation;
@property (nonatomic) IBInspectable CGFloat force;
@property (nonatomic) IBInspectable CGFloat delay;
@property (nonatomic) IBInspectable CGFloat duration;
@property (nonatomic) IBInspectable CGFloat damping;
@property (nonatomic) IBInspectable CGFloat velocity;
@property (nonatomic) IBInspectable float repeatCount;
@property (nonatomic) IBInspectable CGFloat x;
@property (nonatomic) IBInspectable CGFloat y;
@property (nonatomic) IBInspectable CGFloat scaleX;
@property (nonatomic) IBInspectable CGFloat scaleY;
@property (nonatomic) IBInspectable CGFloat rotate;
@property (nonatomic, copy) IBInspectable NSString * _Nonnull curve;
@property (nonatomic) CGFloat opacity;
@property (nonatomic) BOOL animateFrom;
- (void)awakeFromNib;
- (void)layoutSubviews;
- (void)animate;
- (void)animateNextWithCompletion:(void (^ _Nonnull)(void))completion;
- (void)animateTo;
- (void)animateToNextWithCompletion:(void (^ _Nonnull)(void))completion;
- (nonnull instancetype)initWithImage:(UIImage * _Nullable)image OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithImage:(UIImage * _Nullable)image highlightedImage:(UIImage * _Nullable)highlightedImage OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=3.0);
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


IB_DESIGNABLE
SWIFT_CLASS("_TtC15searchSortDummy19DesignableImageView")
@interface DesignableImageView : SpringImageView
@property (nonatomic, strong) IBInspectable UIColor * _Nonnull borderColor;
@property (nonatomic) IBInspectable CGFloat borderWidth;
@property (nonatomic) IBInspectable CGFloat cornerRadius;
- (nonnull instancetype)initWithImage:(UIImage * _Nullable)image OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithImage:(UIImage * _Nullable)image highlightedImage:(UIImage * _Nullable)highlightedImage OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=3.0);
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC15searchSortDummy11SpringLabel")
@interface SpringLabel : UILabel <Springable>
@property (nonatomic) IBInspectable BOOL autostart;
@property (nonatomic) IBInspectable BOOL autohide;
@property (nonatomic, copy) IBInspectable NSString * _Nonnull animation;
@property (nonatomic) IBInspectable CGFloat force;
@property (nonatomic) IBInspectable CGFloat delay;
@property (nonatomic) IBInspectable CGFloat duration;
@property (nonatomic) IBInspectable CGFloat damping;
@property (nonatomic) IBInspectable CGFloat velocity;
@property (nonatomic) IBInspectable float repeatCount;
@property (nonatomic) IBInspectable CGFloat x;
@property (nonatomic) IBInspectable CGFloat y;
@property (nonatomic) IBInspectable CGFloat scaleX;
@property (nonatomic) IBInspectable CGFloat scaleY;
@property (nonatomic) IBInspectable CGFloat rotate;
@property (nonatomic, copy) IBInspectable NSString * _Nonnull curve;
@property (nonatomic) CGFloat opacity;
@property (nonatomic) BOOL animateFrom;
- (void)awakeFromNib;
- (void)layoutSubviews;
- (void)animate;
- (void)animateNextWithCompletion:(void (^ _Nonnull)(void))completion;
- (void)animateTo;
- (void)animateToNextWithCompletion:(void (^ _Nonnull)(void))completion;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


IB_DESIGNABLE
SWIFT_CLASS("_TtC15searchSortDummy15DesignableLabel")
@interface DesignableLabel : SpringLabel
@property (nonatomic) IBInspectable CGFloat lineHeight;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


IB_DESIGNABLE
SWIFT_CLASS("_TtC15searchSortDummy26DesignableTabBarController")
@interface DesignableTabBarController : UITabBarController
@property (nonatomic, strong) IBInspectable UIColor * _Nonnull normalTint;
@property (nonatomic, strong) IBInspectable UIColor * _Nonnull selectedTint;
@property (nonatomic, copy) IBInspectable NSString * _Nonnull fontName;
@property (nonatomic, strong) IBInspectable UIImage * _Nullable firstSelectedImage;
@property (nonatomic, strong) IBInspectable UIImage * _Nullable secondSelectedImage;
@property (nonatomic, strong) IBInspectable UIImage * _Nullable thirdSelectedImage;
@property (nonatomic, strong) IBInspectable UIImage * _Nullable fourthSelectedImage;
@property (nonatomic, strong) IBInspectable UIImage * _Nullable fifthSelectedImage;
- (void)viewDidLoad;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC15searchSortDummy15SpringTextField")
@interface SpringTextField : UITextField <Springable>
@property (nonatomic) IBInspectable BOOL autostart;
@property (nonatomic) IBInspectable BOOL autohide;
@property (nonatomic, copy) IBInspectable NSString * _Nonnull animation;
@property (nonatomic) IBInspectable CGFloat force;
@property (nonatomic) IBInspectable CGFloat delay;
@property (nonatomic) IBInspectable CGFloat duration;
@property (nonatomic) IBInspectable CGFloat damping;
@property (nonatomic) IBInspectable CGFloat velocity;
@property (nonatomic) IBInspectable float repeatCount;
@property (nonatomic) IBInspectable CGFloat x;
@property (nonatomic) IBInspectable CGFloat y;
@property (nonatomic) IBInspectable CGFloat scaleX;
@property (nonatomic) IBInspectable CGFloat scaleY;
@property (nonatomic) IBInspectable CGFloat rotate;
@property (nonatomic, copy) IBInspectable NSString * _Nonnull curve;
@property (nonatomic) CGFloat opacity;
@property (nonatomic) BOOL animateFrom;
- (void)awakeFromNib;
- (void)layoutSubviews;
- (void)animate;
- (void)animateNextWithCompletion:(void (^ _Nonnull)(void))completion;
- (void)animateTo;
- (void)animateToNextWithCompletion:(void (^ _Nonnull)(void))completion;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


IB_DESIGNABLE
SWIFT_CLASS("_TtC15searchSortDummy19DesignableTextField")
@interface DesignableTextField : SpringTextField
@property (nonatomic, strong) IBInspectable UIColor * _Nonnull placeholderColor;
@property (nonatomic) IBInspectable CGFloat sidePadding;
@property (nonatomic) IBInspectable CGFloat leftPadding;
@property (nonatomic) IBInspectable CGFloat rightPadding;
@property (nonatomic, strong) IBInspectable UIColor * _Nonnull borderColor;
@property (nonatomic) IBInspectable CGFloat borderWidth;
@property (nonatomic) IBInspectable CGFloat cornerRadius;
@property (nonatomic) IBInspectable CGFloat lineHeight;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC15searchSortDummy14SpringTextView")
@interface SpringTextView : UITextView <Springable>
@property (nonatomic) IBInspectable BOOL autostart;
@property (nonatomic) IBInspectable BOOL autohide;
@property (nonatomic, copy) IBInspectable NSString * _Nonnull animation;
@property (nonatomic) IBInspectable CGFloat force;
@property (nonatomic) IBInspectable CGFloat delay;
@property (nonatomic) IBInspectable CGFloat duration;
@property (nonatomic) IBInspectable CGFloat damping;
@property (nonatomic) IBInspectable CGFloat velocity;
@property (nonatomic) IBInspectable float repeatCount;
@property (nonatomic) IBInspectable CGFloat x;
@property (nonatomic) IBInspectable CGFloat y;
@property (nonatomic) IBInspectable CGFloat scaleX;
@property (nonatomic) IBInspectable CGFloat scaleY;
@property (nonatomic) IBInspectable CGFloat rotate;
@property (nonatomic, copy) IBInspectable NSString * _Nonnull curve;
@property (nonatomic) CGFloat opacity;
@property (nonatomic) BOOL animateFrom;
- (void)awakeFromNib;
- (void)layoutSubviews;
- (void)animate;
- (void)animateNextWithCompletion:(void (^ _Nonnull)(void))completion;
- (void)animateTo;
- (void)animateToNextWithCompletion:(void (^ _Nonnull)(void))completion;
- (nonnull instancetype)initWithFrame:(CGRect)frame textContainer:(NSTextContainer * _Nullable)textContainer OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=7.0);
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


IB_DESIGNABLE
SWIFT_CLASS("_TtC15searchSortDummy18DesignableTextView")
@interface DesignableTextView : SpringTextView
@property (nonatomic, strong) IBInspectable UIColor * _Nonnull borderColor;
@property (nonatomic) IBInspectable CGFloat borderWidth;
@property (nonatomic) IBInspectable CGFloat cornerRadius;
@property (nonatomic) IBInspectable CGFloat lineHeight;
- (nonnull instancetype)initWithFrame:(CGRect)frame textContainer:(NSTextContainer * _Nullable)textContainer OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=7.0);
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC15searchSortDummy10SpringView")
@interface SpringView : UIView <Springable>
@property (nonatomic) IBInspectable BOOL autostart;
@property (nonatomic) IBInspectable BOOL autohide;
@property (nonatomic, copy) IBInspectable NSString * _Nonnull animation;
@property (nonatomic) IBInspectable CGFloat force;
@property (nonatomic) IBInspectable CGFloat delay;
@property (nonatomic) IBInspectable CGFloat duration;
@property (nonatomic) IBInspectable CGFloat damping;
@property (nonatomic) IBInspectable CGFloat velocity;
@property (nonatomic) IBInspectable float repeatCount;
@property (nonatomic) IBInspectable CGFloat x;
@property (nonatomic) IBInspectable CGFloat y;
@property (nonatomic) IBInspectable CGFloat scaleX;
@property (nonatomic) IBInspectable CGFloat scaleY;
@property (nonatomic) IBInspectable CGFloat rotate;
@property (nonatomic, copy) IBInspectable NSString * _Nonnull curve;
@property (nonatomic) CGFloat opacity;
@property (nonatomic) BOOL animateFrom;
- (void)awakeFromNib;
- (void)layoutSubviews;
- (void)animate;
- (void)animateNextWithCompletion:(void (^ _Nonnull)(void))completion;
- (void)animateTo;
- (void)animateToNextWithCompletion:(void (^ _Nonnull)(void))completion;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


IB_DESIGNABLE
SWIFT_CLASS("_TtC15searchSortDummy14DesignableView")
@interface DesignableView : SpringView
@property (nonatomic, strong) IBInspectable UIColor * _Nonnull borderColor;
@property (nonatomic) IBInspectable CGFloat borderWidth;
@property (nonatomic) IBInspectable CGFloat cornerRadius;
@property (nonatomic, strong) IBInspectable UIColor * _Nonnull shadowColor;
@property (nonatomic) IBInspectable CGFloat shadowRadius;
@property (nonatomic) IBInspectable CGFloat shadowOpacity;
@property (nonatomic) IBInspectable CGFloat shadowOffsetY;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// A TextFieldEffects object is a control that displays editable text and contains the boilerplates to setup unique animations for text entrey and display. You typically use this class the same way you use UITextField.
SWIFT_CLASS("_TtC15searchSortDummy16TextFieldEffects")
@interface TextFieldEffects : UITextField
- (void)drawRect:(CGRect)rect;
- (void)drawPlaceholderInRect:(CGRect)rect;
@property (nonatomic, copy) NSString * _Nullable text;
- (void)willMoveToSuperview:(UIView * _Null_unspecified)newSuperview;
/// The textfield has started an editing session.
- (void)textFieldDidBeginEditing;
/// The textfield has ended an editing session.
- (void)textFieldDidEndEditing;
- (void)prepareForInterfaceBuilder;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// An HoshiTextField is a subclass of the TextFieldEffects object, is a control that displays an UITextField with a customizable visual effect around the lower edge of the control.
IB_DESIGNABLE
SWIFT_CLASS("_TtC15searchSortDummy14HoshiTextField")
@interface HoshiTextField : TextFieldEffects
/// The color of the border when it has no content.
/// This property applies a color to the lower edge of the control. The default value for this property is a clear color.
@property (nonatomic, strong) IBInspectable UIColor * _Nullable borderInactiveColor;
/// The color of the border when it has content.
/// This property applies a color to the lower edge of the control. The default value for this property is a clear color.
@property (nonatomic, strong) IBInspectable UIColor * _Nullable borderActiveColor;
/// The color of the placeholder text.
/// This property applies a color to the complete placeholder string. The default value for this property is a black color.
@property (nonatomic, strong) IBInspectable UIColor * _Nonnull placeholderColor;
/// The scale of the placeholder font.
/// This property determines the size of the placeholder label relative to the font size of the text field.
@property (nonatomic) IBInspectable CGFloat placeholderFontScale;
@property (nonatomic, copy) NSString * _Nullable placeholder;
@property (nonatomic) CGRect bounds;
- (CGRect)editingRectForBounds:(CGRect)bounds SWIFT_WARN_UNUSED_RESULT;
- (CGRect)textRectForBounds:(CGRect)bounds SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

/// <code>IQAutoToolbarBySubviews</code>
/// Creates Toolbar according to subview’s hirarchy of Textfield’s in view.
/// <code>IQAutoToolbarByTag</code>
/// Creates Toolbar according to tag property of TextField’s.
/// <code>IQAutoToolbarByPosition</code>
/// Creates Toolbar according to the y,x position of textField in it’s superview coordinate.
typedef SWIFT_ENUM(NSInteger, IQAutoToolbarManageBehaviour, closed) {
  IQAutoToolbarManageBehaviourBySubviews = 0,
  IQAutoToolbarManageBehaviourByTag = 1,
  IQAutoToolbarManageBehaviourByPosition = 2,
};

@class IQInvocation;

SWIFT_CLASS("_TtC15searchSortDummy15IQBarButtonItem")
@interface IQBarButtonItem : UIBarButtonItem
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, strong) UIColor * _Nullable tintColor;
/// Boolean to know if it’s a system item or custom item, we are having a limitation that we cannot override a designated initializer, so we are manually setting this property once in initialization
@property (nonatomic) BOOL isSystemItem;
/// Additional target & action to do get callback action. Note that setting custom target & selector doesn’t affect native functionality, this is just an additional target to get a callback.
/// @param target Target object.
/// @param action Target Selector.
- (void)setTarget:(id _Nullable)target action:(SEL _Nullable)action;
/// Customized Invocation to be called when button is pressed. invocation is internally created using setTarget:action: method.
@property (nonatomic, strong) IQInvocation * _Nullable invocation;
@end


/// IQBarButtonItemConfiguration for creating toolbar with bar button items
SWIFT_CLASS("_TtC15searchSortDummy28IQBarButtonItemConfiguration")
@interface IQBarButtonItemConfiguration : NSObject
- (nonnull instancetype)initWithBarButtonSystemItem:(UIBarButtonSystemItem)barButtonSystemItem action:(SEL _Nonnull)action OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithImage:(UIImage * _Nonnull)image action:(SEL _Nonnull)action OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithTitle:(NSString * _Nonnull)title action:(SEL _Nonnull)action OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly, strong) UIImage * _Nullable image;
@property (nonatomic, readonly, copy) NSString * _Nullable title;
@property (nonatomic, readonly) SEL _Nullable action;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// <code>IQEnableModeDefault</code>
/// Pick default settings.
/// <code>IQEnableModeEnabled</code>
/// setting is enabled.
/// <code>IQEnableModeDisabled</code>
/// setting is disabled.
typedef SWIFT_ENUM(NSInteger, IQEnableMode, closed) {
  IQEnableModeDefault = 0,
  IQEnableModeEnabled = 1,
  IQEnableModeDisabled = 2,
};


SWIFT_CLASS("_TtC15searchSortDummy12IQInvocation")
@interface IQInvocation : NSObject
@property (nonatomic, weak) id _Nullable target;
@property (nonatomic) SEL _Nonnull action;
- (nonnull instancetype)init:(id _Nonnull)target :(SEL _Nonnull)action OBJC_DESIGNATED_INITIALIZER;
- (void)invokeFrom:(id _Nonnull)from;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum IQPreviousNextDisplayMode : NSInteger;
@class UIFont;
@class UIGestureRecognizer;

/// Codeless drop-in universal library allows to prevent issues of keyboard sliding up and cover UITextField/UITextView. Neither need to write any code nor any setup required and much more. A generic version of KeyboardManagement. https://developer.apple.com/library/ios/documentation/StringsTextFonts/Conceptual/TextAndWebiPhoneOS/KeyboardManagement/KeyboardManagement.html
SWIFT_CLASS("_TtC15searchSortDummy17IQKeyboardManager")
@interface IQKeyboardManager : NSObject <UIGestureRecognizerDelegate>
/// Enable/disable managing distance between keyboard and textField. Default is YES(Enabled when class loads in <code>+(void)load</code> method).
@property (nonatomic) BOOL enable;
/// To set keyboard distance from textField. can’t be less than zero. Default is 10.0.
@property (nonatomic) CGFloat keyboardDistanceFromTextField;
/// Boolean to know if keyboard is showing.
@property (nonatomic, readonly) BOOL keyboardShowing;
/// moved distance to the top used to maintain distance between keyboard and textField. Most of the time this will be a positive value.
@property (nonatomic, readonly) CGFloat movedDistance;
/// Will be called then movedDistance will be changed
@property (nonatomic, copy) void (^ _Nullable movedDistanceChanged)(CGFloat);
/// Returns the default singleton instance.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) IQKeyboardManager * _Nonnull shared;)
+ (IQKeyboardManager * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
/// Automatic add the IQToolbar functionality. Default is YES.
@property (nonatomic) BOOL enableAutoToolbar;
/// /**
/// IQAutoToolbarBySubviews:   Creates Toolbar according to subview’s hirarchy of Textfield’s in view.
/// IQAutoToolbarByTag:        Creates Toolbar according to tag property of TextField’s.
/// IQAutoToolbarByPosition:   Creates Toolbar according to the y,x position of textField in it’s superview coordinate.
/// Default is IQAutoToolbarBySubviews.
/// */
/// AutoToolbar managing behaviour. Default is IQAutoToolbarBySubviews.
@property (nonatomic) enum IQAutoToolbarManageBehaviour toolbarManageBehaviour;
/// If YES, then uses textField’s tintColor property for IQToolbar, otherwise tint color is default. Default is NO.
@property (nonatomic) BOOL shouldToolbarUsesTextFieldTintColor;
/// This is used for toolbar.tintColor when textfield.keyboardAppearance is UIKeyboardAppearanceDefault. If shouldToolbarUsesTextFieldTintColor is YES then this property is ignored. Default is nil and uses black color.
@property (nonatomic, strong) UIColor * _Nullable toolbarTintColor;
/// This is used for toolbar.barTintColor. Default is nil.
@property (nonatomic, strong) UIColor * _Nullable toolbarBarTintColor;
/// IQPreviousNextDisplayModeDefault:      Show NextPrevious when there are more than 1 textField otherwise hide.
/// IQPreviousNextDisplayModeAlwaysHide:   Do not show NextPrevious buttons in any case.
/// IQPreviousNextDisplayModeAlwaysShow:   Always show nextPrevious buttons, if there are more than 1 textField then both buttons will be visible but will be shown as disabled.
@property (nonatomic) enum IQPreviousNextDisplayMode previousNextDisplayMode;
/// Toolbar previous/next/done button icon, If nothing is provided then check toolbarDoneBarButtonItemText to draw done button.
@property (nonatomic, strong) UIImage * _Nullable toolbarPreviousBarButtonItemImage;
@property (nonatomic, strong) UIImage * _Nullable toolbarNextBarButtonItemImage;
@property (nonatomic, strong) UIImage * _Nullable toolbarDoneBarButtonItemImage;
/// Toolbar previous/next/done button text, If nothing is provided then system default ‘UIBarButtonSystemItemDone’ will be used.
@property (nonatomic, copy) NSString * _Nullable toolbarPreviousBarButtonItemText;
@property (nonatomic, copy) NSString * _Nullable toolbarPreviousBarButtonItemAccessibilityLabel;
@property (nonatomic, copy) NSString * _Nullable toolbarNextBarButtonItemText;
@property (nonatomic, copy) NSString * _Nullable toolbarNextBarButtonItemAccessibilityLabel;
@property (nonatomic, copy) NSString * _Nullable toolbarDoneBarButtonItemText;
@property (nonatomic, copy) NSString * _Nullable toolbarDoneBarButtonItemAccessibilityLabel;
/// If YES, then it add the textField’s placeholder text on IQToolbar. Default is YES.
@property (nonatomic) BOOL shouldShowToolbarPlaceholder;
/// Placeholder Font. Default is nil.
@property (nonatomic, strong) UIFont * _Nullable placeholderFont;
/// Placeholder Color. Default is nil. Which means lightGray
@property (nonatomic, strong) UIColor * _Nullable placeholderColor;
/// Placeholder Button Color when it’s treated as button. Default is nil.
@property (nonatomic, strong) UIColor * _Nullable placeholderButtonColor;
/// Override the keyboardAppearance for all textField/textView. Default is NO.
@property (nonatomic) BOOL overrideKeyboardAppearance;
/// If overrideKeyboardAppearance is YES, then all the textField keyboardAppearance is set using this property.
@property (nonatomic) UIKeyboardAppearance keyboardAppearance;
/// Resigns Keyboard on touching outside of UITextField/View. Default is NO.
@property (nonatomic) BOOL shouldResignOnTouchOutside;
/// TapGesture to resign keyboard on view’s touch. It’s a readonly property and exposed only for adding/removing dependencies if your added gesture does have collision with this one
@property (nonatomic, strong) UITapGestureRecognizer * _Nonnull resignFirstResponderGesture;
/// Resigns currently first responder field.
- (BOOL)resignFirstResponder;
/// Returns YES if can navigate to previous responder textField/textView, otherwise NO.
@property (nonatomic, readonly) BOOL canGoPrevious;
/// Returns YES if can navigate to next responder textField/textView, otherwise NO.
@property (nonatomic, readonly) BOOL canGoNext;
/// Navigate to previous responder textField/textView.
- (BOOL)goPrevious;
/// Navigate to next responder textField/textView.
- (BOOL)goNext;
/// previousAction.
- (void)previousAction:(IQBarButtonItem * _Nonnull)barButton;
/// nextAction.
- (void)nextAction:(IQBarButtonItem * _Nonnull)barButton;
/// doneAction. Resigning current textField.
- (void)doneAction:(IQBarButtonItem * _Nonnull)barButton;
/// Resigning on tap gesture.   (Enhancement ID: #14)
- (void)tapRecognized:(UITapGestureRecognizer * _Nonnull)gesture;
/// Note: returning YES is guaranteed to allow simultaneous recognition. returning NO is not guaranteed to prevent simultaneous recognition, as the other gesture’s delegate may return YES.
- (BOOL)gestureRecognizer:(UIGestureRecognizer * _Nonnull)gestureRecognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer * _Nonnull)otherGestureRecognizer SWIFT_WARN_UNUSED_RESULT;
/// To not detect touch events in a subclass of UIControl, these may have added their own selector for specific work
- (BOOL)gestureRecognizer:(UIGestureRecognizer * _Nonnull)gestureRecognizer shouldReceiveTouch:(UITouch * _Nonnull)touch SWIFT_WARN_UNUSED_RESULT;
/// If YES, then it plays inputClick sound on next/previous/done click.
@property (nonatomic) BOOL shouldPlayInputClicks;
/// If YES, then calls ‘setNeedsLayout’ and ‘layoutIfNeeded’ on any frame update of to viewController’s view.
@property (nonatomic) BOOL layoutIfNeededOnUpdate;
/// Disable distance handling within the scope of disabled distance handling viewControllers classes. Within this scope, ‘enabled’ property is ignored. Class should be kind of UIViewController.
@property (nonatomic, copy) NSArray<SWIFT_METATYPE(UIViewController)> * _Nonnull disabledDistanceHandlingClasses;
/// Enable distance handling within the scope of enabled distance handling viewControllers classes. Within this scope, ‘enabled’ property is ignored. Class should be kind of UIViewController. If same Class is added in disabledDistanceHandlingClasses list, then enabledDistanceHandlingClasses will be ignored.
@property (nonatomic, copy) NSArray<SWIFT_METATYPE(UIViewController)> * _Nonnull enabledDistanceHandlingClasses;
/// Disable automatic toolbar creation within the scope of disabled toolbar viewControllers classes. Within this scope, ‘enableAutoToolbar’ property is ignored. Class should be kind of UIViewController.
@property (nonatomic, copy) NSArray<SWIFT_METATYPE(UIViewController)> * _Nonnull disabledToolbarClasses;
/// Enable automatic toolbar creation within the scope of enabled toolbar viewControllers classes. Within this scope, ‘enableAutoToolbar’ property is ignored. Class should be kind of UIViewController. If same Class is added in disabledToolbarClasses list, then enabledToolbarClasses will be ignore.
@property (nonatomic, copy) NSArray<SWIFT_METATYPE(UIViewController)> * _Nonnull enabledToolbarClasses;
/// Allowed subclasses of UIView to add all inner textField, this will allow to navigate between textField contains in different superview. Class should be kind of UIView.
@property (nonatomic, copy) NSArray<SWIFT_METATYPE(UIView)> * _Nonnull toolbarPreviousNextAllowedClasses;
/// Disabled classes to ignore ‘shouldResignOnTouchOutside’ property, Class should be kind of UIViewController.
@property (nonatomic, copy) NSArray<SWIFT_METATYPE(UIViewController)> * _Nonnull disabledTouchResignedClasses;
/// Enabled classes to forcefully enable ‘shouldResignOnTouchOutsite’ property. Class should be kind of UIViewController. If same Class is added in disabledTouchResignedClasses list, then enabledTouchResignedClasses will be ignored.
@property (nonatomic, copy) NSArray<SWIFT_METATYPE(UIViewController)> * _Nonnull enabledTouchResignedClasses;
/// if shouldResignOnTouchOutside is enabled then you can customise the behaviour to not recognise gesture touches on some specific view subclasses. Class should be kind of UIView. Default is [UIControl, UINavigationBar]
@property (nonatomic, copy) NSArray<SWIFT_METATYPE(UIView)> * _Nonnull touchResignedGestureIgnoreClasses;
/// Add/Remove customised Notification for third party customised TextField/TextView. Please be aware that the Notification object must be idential to UITextField/UITextView Notification objects and customised TextField/TextView support must be idential to UITextField/UITextView.
/// @param didBeginEditingNotificationName This should be identical to UITextViewTextDidBeginEditingNotification
/// @param didEndEditingNotificationName This should be identical to UITextViewTextDidEndEditingNotification
- (void)registerTextFieldViewClass:(SWIFT_METATYPE(UIView) _Nonnull)aClass didBeginEditingNotificationName:(NSString * _Nonnull)didBeginEditingNotificationName didEndEditingNotificationName:(NSString * _Nonnull)didEndEditingNotificationName;
- (void)unregisterTextFieldViewClass:(SWIFT_METATYPE(UIView) _Nonnull)aClass didBeginEditingNotificationName:(NSString * _Nonnull)didBeginEditingNotificationName didEndEditingNotificationName:(NSString * _Nonnull)didEndEditingNotificationName;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)reloadLayoutIfNeeded;
- (void)keyboardWillShow:(NSNotification * _Nullable)notification;
- (void)keyboardDidShow:(NSNotification * _Nullable)notification;
- (void)keyboardWillHide:(NSNotification * _Nullable)notification;
- (void)keyboardDidHide:(NSNotification * _Nonnull)notification;
/// UITextFieldTextDidBeginEditingNotification, UITextViewTextDidBeginEditingNotification. Fetching UITextFieldView object.
- (void)textFieldViewDidBeginEditing:(NSNotification * _Nonnull)notification;
/// UITextFieldTextDidEndEditingNotification, UITextViewTextDidEndEditingNotification. Removing fetched object.
- (void)textFieldViewDidEndEditing:(NSNotification * _Nonnull)notification;
/// UIApplicationWillChangeStatusBarOrientationNotification. Need to set the textView to it’s original position. If any frame changes made. (Bug ID: #92)
- (void)willChangeStatusBarOrientation:(NSNotification * _Nonnull)notification;
/// reloadInputViews to reload toolbar buttons enable/disable state on the fly Enhancement ID #434.
- (void)reloadInputViews;
/// <hr/>
/// <h2>MARK: Debugging & Developer options</h2>
@property (nonatomic) BOOL enableDebugging;
/// @warning Use below methods to completely enable/disable notifications registered by library internally. Please keep in mind that library is totally dependent on NSNotification of UITextField, UITextField, Keyboard etc. If you do unregisterAllNotifications then library will not work at all. You should only use below methods if you want to completedly disable all library functions. You should use below methods at your own risk.
- (void)registerAllNotifications;
- (void)unregisterAllNotifications;
@end

@class NSURL;
@class NSTextAttachment;

/// Manages the return key to work like next/done in a view hierarchy.
SWIFT_CLASS("_TtC15searchSortDummy26IQKeyboardReturnKeyHandler")
@interface IQKeyboardReturnKeyHandler : NSObject <UITextFieldDelegate, UITextViewDelegate>
/// Delegate of textField/textView.
@property (nonatomic, weak) id <UITextFieldDelegate, UITextViewDelegate> _Nullable delegate;
/// Set the last textfield return key type. Default is UIReturnKeyDefault.
@property (nonatomic) UIReturnKeyType lastTextFieldReturnKeyType;
/// <hr/>
/// <h2>MARK: Initialization/Deinitialization</h2>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// Add all the textFields available in UIViewController’s view.
- (nonnull instancetype)initWithController:(UIViewController * _Nonnull)controller OBJC_DESIGNATED_INITIALIZER;
/// Should pass UITextField/UITextView intance. Assign textFieldView delegate to self, change it’s returnKeyType.
/// @param view UITextField/UITextView object to register.
- (void)addTextFieldView:(UIView * _Nonnull)view;
/// Should pass UITextField/UITextView intance. Restore it’s textFieldView delegate and it’s returnKeyType.
/// @param view UITextField/UITextView object to unregister.
- (void)removeTextFieldView:(UIView * _Nonnull)view;
/// Add all the UITextField/UITextView responderView’s.
/// @param view UIView object to register all it’s responder subviews.
- (void)addResponderFromView:(UIView * _Nonnull)view;
/// Remove all the UITextField/UITextView responderView’s.
/// @param view UIView object to unregister all it’s responder subviews.
- (void)removeResponderFromView:(UIView * _Nonnull)view;
/// <hr/>
/// <h2>MARK: UITextField/UITextView delegates</h2>
- (BOOL)textFieldShouldBeginEditing:(UITextField * _Nonnull)textField SWIFT_WARN_UNUSED_RESULT;
- (BOOL)textFieldShouldEndEditing:(UITextField * _Nonnull)textField SWIFT_WARN_UNUSED_RESULT;
- (void)textFieldDidBeginEditing:(UITextField * _Nonnull)textField;
- (void)textFieldDidEndEditing:(UITextField * _Nonnull)textField;
- (void)textFieldDidEndEditing:(UITextField * _Nonnull)textField reason:(UITextFieldDidEndEditingReason)reason SWIFT_AVAILABILITY(ios,introduced=10.0);
- (BOOL)textField:(UITextField * _Nonnull)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString * _Nonnull)string SWIFT_WARN_UNUSED_RESULT;
- (BOOL)textFieldShouldClear:(UITextField * _Nonnull)textField SWIFT_WARN_UNUSED_RESULT;
- (BOOL)textFieldShouldReturn:(UITextField * _Nonnull)textField SWIFT_WARN_UNUSED_RESULT;
- (BOOL)textViewShouldBeginEditing:(UITextView * _Nonnull)textView SWIFT_WARN_UNUSED_RESULT;
- (BOOL)textViewShouldEndEditing:(UITextView * _Nonnull)textView SWIFT_WARN_UNUSED_RESULT;
- (void)textViewDidBeginEditing:(UITextView * _Nonnull)textView;
- (void)textViewDidEndEditing:(UITextView * _Nonnull)textView;
- (BOOL)textView:(UITextView * _Nonnull)textView shouldChangeTextInRange:(NSRange)range replacementText:(NSString * _Nonnull)text SWIFT_WARN_UNUSED_RESULT;
- (void)textViewDidChange:(UITextView * _Nonnull)textView;
- (void)textViewDidChangeSelection:(UITextView * _Nonnull)textView;
- (BOOL)textView:(UITextView * _Nonnull)aTextView shouldInteractWithURL:(NSURL * _Nonnull)URL inRange:(NSRange)characterRange interaction:(UITextItemInteraction)interaction SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(ios,introduced=10.0);
- (BOOL)textView:(UITextView * _Nonnull)aTextView shouldInteractWithTextAttachment:(NSTextAttachment * _Nonnull)textAttachment inRange:(NSRange)characterRange interaction:(UITextItemInteraction)interaction SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(ios,introduced=10.0);
- (BOOL)textView:(UITextView * _Nonnull)aTextView shouldInteractWithURL:(NSURL * _Nonnull)URL inRange:(NSRange)characterRange SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(ios,deprecated=10.0);
- (BOOL)textView:(UITextView * _Nonnull)aTextView shouldInteractWithTextAttachment:(NSTextAttachment * _Nonnull)textAttachment inRange:(NSRange)characterRange SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(ios,deprecated=10.0);
@end

/// <code>IQPreviousNextDisplayModeDefault</code>
/// Show NextPrevious when there are more than 1 textField otherwise hide.
/// <code>IQPreviousNextDisplayModeAlwaysHide</code>
/// Do not show NextPrevious buttons in any case.
/// <code>IQPreviousNextDisplayModeAlwaysShow</code>
/// Always show nextPrevious buttons, if there are more than 1 textField then both buttons will be visible but will be shown as disabled.
typedef SWIFT_ENUM(NSInteger, IQPreviousNextDisplayMode, closed) {
  IQPreviousNextDisplayModeDefault = 0,
  IQPreviousNextDisplayModeAlwaysHide = 1,
  IQPreviousNextDisplayModeAlwaysShow = 2,
};


SWIFT_CLASS("_TtC15searchSortDummy18IQPreviousNextView")
@interface IQPreviousNextView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class NSAttributedString;

/// @abstract UITextView with placeholder support
SWIFT_CLASS("_TtC15searchSortDummy10IQTextView")
@interface IQTextView : UITextView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame textContainer:(NSTextContainer * _Nullable)textContainer OBJC_DESIGNATED_INITIALIZER;
- (void)awakeFromNib;
/// @abstract To set textView’s placeholder text color.
@property (nonatomic, strong) IBInspectable UIColor * _Nullable placeholderTextColor;
/// @abstract To set textView’s placeholder text. Default is nil.
@property (nonatomic, copy) IBInspectable NSString * _Nullable placeholder;
- (void)layoutSubviews;
- (void)refreshPlaceholder;
@property (nonatomic, copy) NSString * _Null_unspecified text;
@property (nonatomic, strong) NSAttributedString * _Null_unspecified attributedText;
@property (nonatomic, strong) UIFont * _Nullable font;
@property (nonatomic) NSTextAlignment textAlignment;
@property (nonatomic, strong) id <UITextViewDelegate> _Nullable delegate;
@property (nonatomic, readonly) CGSize intrinsicContentSize;
@end


SWIFT_CLASS("_TtC15searchSortDummy20IQTitleBarButtonItem")
@interface IQTitleBarButtonItem : IQBarButtonItem
@property (nonatomic, strong) UIFont * _Nullable titleFont;
@property (nonatomic, copy) NSString * _Nullable title;
/// titleColor to be used for displaying button text when displaying title (disabled state).
@property (nonatomic, strong) UIColor * _Nullable titleColor;
/// selectableTitleColor to be used for displaying button text when button is enabled.
@property (nonatomic, strong) UIColor * _Nullable selectableTitleColor;
/// Customized Invocation to be called on title button action. titleInvocation is internally created using setTitleTarget:action: method.
@property (nonatomic, strong) IQInvocation * _Nullable invocation;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithTitle:(NSString * _Nullable)title;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


/// @abstract   IQToolbar for IQKeyboardManager.
SWIFT_CLASS("_TtC15searchSortDummy9IQToolbar")
@interface IQToolbar : UIToolbar <UIInputViewAudioFeedback>
@property (nonatomic, strong) IQBarButtonItem * _Nonnull previousBarButton;
@property (nonatomic, strong) IQBarButtonItem * _Nonnull nextBarButton;
@property (nonatomic, strong) IQTitleBarButtonItem * _Nonnull titleBarButton;
@property (nonatomic, strong) IQBarButtonItem * _Nonnull doneBarButton;
@property (nonatomic, strong) IQBarButtonItem * _Nonnull fixedSpaceBarButton;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (CGSize)sizeThatFits:(CGSize)size SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, strong) UIColor * _Null_unspecified tintColor;
- (void)layoutSubviews;
@property (nonatomic, readonly) BOOL enableInputClicksWhenVisible;
@end


SWIFT_CLASS("_TtC15searchSortDummy7ImageVC")
@interface ImageVC : UIViewController
@property (nonatomic, weak) IBOutlet UIScrollView * _Null_unspecified scrollView;
- (void)viewDidLoad;
- (IBAction)btnMedidateAction:(id _Nonnull)sender;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC15searchSortDummy24KeyboardLayoutConstraint")
@interface KeyboardLayoutConstraint : NSLayoutConstraint
- (void)awakeFromNib;
- (void)keyboardWillShowNotification:(NSNotification * _Nonnull)notification;
- (void)keyboardWillHideNotification:(NSNotification * _Nonnull)notification;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC15searchSortDummy11LoadingView")
@interface LoadingView : UIView
@property (nonatomic, weak) IBOutlet SpringView * _Null_unspecified indicatorView;
- (void)awakeFromNib;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC15searchSortDummy7LoginVC")
@interface LoginVC : UIViewController <NSXMLParserDelegate, UITextFieldDelegate>
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified btnShowHidePassword;
@property (nonatomic, weak) IBOutlet UITextField * _Null_unspecified txtUserID;
@property (nonatomic, weak) IBOutlet UITextField * _Null_unspecified txtPassword;
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified btnLogin;
- (void)viewDidLoad;
- (IBAction)btnShowHidePasswordClicked:(UIButton * _Nonnull)sender;
- (IBAction)btnLoginAction:(id _Nonnull)sender;
- (BOOL)textFieldShouldReturn:(UITextField * _Nonnull)textField SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC15searchSortDummy12MenuItemView")
@interface MenuItemView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC15searchSortDummy32MonthAttributeCollectionViewCell")
@interface MonthAttributeCollectionViewCell : UICollectionViewCell
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified monthAttrbBtn;
- (void)awakeFromNib;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class UITableView;

SWIFT_CLASS("_TtC15searchSortDummy19MonthWiseTrackingVC")
@interface MonthWiseTrackingVC : UIViewController
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified monthTitleLabl;
@property (nonatomic, weak) IBOutlet UITableView * _Null_unspecified tablVw;
- (void)viewDidLoad;
- (IBAction)tapOnBackBtn:(id _Nonnull)sender;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end



@class NSIndexPath;

@interface MonthWiseTrackingVC (SWIFT_EXTENSION(searchSortDummy)) <UITableViewDataSource, UITableViewDelegate>
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
@end




@class UIDatePicker;

SWIFT_CLASS("_TtC15searchSortDummy11NewReminder")
@interface NewReminder : UIViewController <UITextFieldDelegate>
@property (nonatomic, weak) IBOutlet UIDatePicker * _Null_unspecified datePicker;
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified btnSave;
- (void)viewDidLoad;
- (IBAction)saveNewReminderWithSender:(id _Nonnull)sender;
- (IBAction)btnDismiss:(id _Nonnull)sender;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC15searchSortDummy16OthersMeditation")
@interface OthersMeditation : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC15searchSortDummy8ReviewVC")
@interface ReviewVC : UIViewController <UITextViewDelegate>
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified lblMonthName;
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified lblSwarajKriya;
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified lblEnergization;
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified lblInterruptions;
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified lblSwarajKriya2;
@property (nonatomic, weak) IBOutlet UITextView * _Null_unspecified txtMsgs;
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified btnSave;
- (void)viewDidLoad;
- (IBAction)btnBackAction:(UIButton * _Nonnull)sender;
- (IBAction)btnSaveAction:(UIButton * _Nonnull)sender;
- (IBAction)btnTapAction:(id _Nonnull)sender;
- (void)textViewDidChange:(UITextView * _Nonnull)textView;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC15searchSortDummy6Spring")
@interface Spring : NSObject
- (void)didBecomeActiveNotification:(NSNotification * _Nonnull)notification;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC15searchSortDummy15SpringAnimation")
@interface SpringAnimation : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end









/// Replace the system volume popup with a more subtle way to display the volume
/// when the user changes it with the volume rocker.
SWIFT_CLASS("_TtC15searchSortDummy12SubtleVolume")
@interface SubtleVolume : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
- (void)observeValueForKeyPath:(NSString * _Nullable)keyPath ofObject:(id _Nullable)object change:(NSDictionary<NSKeyValueChangeKey, id> * _Nullable)change context:(void * _Nullable)context;
@end


@protocol UIViewControllerContextTransitioning;

SWIFT_CLASS("_TtC15searchSortDummy18TransitionAnimator")
@interface TransitionAnimator : NSObject <UIViewControllerAnimatedTransitioning, UIViewControllerTransitioningDelegate>
- (void)animateTransition:(id <UIViewControllerContextTransitioning> _Nonnull)transitionContext;
- (NSTimeInterval)transitionDuration:(id <UIViewControllerContextTransitioning> _Nullable)transitionContext SWIFT_WARN_UNUSED_RESULT;
- (id <UIViewControllerAnimatedTransitioning> _Nullable)animationControllerForPresentedController:(UIViewController * _Nonnull)presented presentingController:(UIViewController * _Nonnull)presenting sourceController:(UIViewController * _Nonnull)source SWIFT_WARN_UNUSED_RESULT;
- (id <UIViewControllerAnimatedTransitioning> _Nullable)animationControllerForDismissedController:(UIViewController * _Nonnull)dismissed SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC15searchSortDummy17TransitionManager")
@interface TransitionManager : NSObject <UIViewControllerAnimatedTransitioning, UIViewControllerTransitioningDelegate>
- (void)animateTransition:(id <UIViewControllerContextTransitioning> _Nonnull)transitionContext;
- (NSTimeInterval)transitionDuration:(id <UIViewControllerContextTransitioning> _Nullable)transitionContext SWIFT_WARN_UNUSED_RESULT;
- (id <UIViewControllerAnimatedTransitioning> _Nullable)animationControllerForDismissedController:(UIViewController * _Nonnull)dismissed SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC15searchSortDummy14TransitionZoom")
@interface TransitionZoom : NSObject <UIViewControllerAnimatedTransitioning, UIViewControllerTransitioningDelegate>
- (void)animateTransition:(id <UIViewControllerContextTransitioning> _Nonnull)transitionContext;
- (NSTimeInterval)transitionDuration:(id <UIViewControllerContextTransitioning> _Nullable)transitionContext SWIFT_WARN_UNUSED_RESULT;
- (id <UIViewControllerAnimatedTransitioning> _Nullable)animationControllerForDismissedController:(UIViewController * _Nonnull)dismissed SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



typedef SWIFT_ENUM(NSInteger, UICircularProgressRingGradientPosition, closed) {
/// Gradient positioned at the top
  UICircularProgressRingGradientPositionTop = 1,
/// Gradient positioned at the bottom
  UICircularProgressRingGradientPositionBottom = 2,
/// Gradient positioned to the left
  UICircularProgressRingGradientPositionLeft = 3,
/// Gradient positioned to the right
  UICircularProgressRingGradientPositionRight = 4,
/// Gradient positioned in the top left corner
  UICircularProgressRingGradientPositionTopLeft = 5,
/// Gradient positioned in the top right corner
  UICircularProgressRingGradientPositionTopRight = 6,
/// Gradient positioned in the bottom left corner
  UICircularProgressRingGradientPositionBottomLeft = 7,
/// Gradient positioned in the bottom right corner
  UICircularProgressRingGradientPositionBottomRight = 8,
};

enum UICircularProgressRingStyle : NSInteger;
@class UICircularProgressRingView;
@protocol CAAction;

/// The internal subclass for CAShapeLayer.
/// This is the class that handles all the drawing and animation.
/// This class is not interacted with, instead
/// properties are set in UICircularProgressRingView and those are delegated to here.
SWIFT_CLASS("_TtC15searchSortDummy27UICircularProgressRingLayer")
@interface UICircularProgressRingLayer : CAShapeLayer
/// The NSManaged properties for the layer.
/// These properties are initialized in UICircularProgressRingView.
/// They’re also assigned by mutating UICircularProgressRingView properties.
@property (nonatomic) BOOL fullCircle;
@property (nonatomic) CGFloat value;
@property (nonatomic) CGFloat minValue;
@property (nonatomic) CGFloat maxValue;
@property (nonatomic) enum UICircularProgressRingStyle ringStyle;
@property (nonatomic, copy) NSArray<NSNumber *> * _Nonnull patternForDashes;
@property (nonatomic, copy) NSArray<UIColor *> * _Nonnull gradientColors;
@property (nonatomic, copy) NSArray<NSNumber *> * _Nullable gradientColorLocations;
@property (nonatomic) enum UICircularProgressRingGradientPosition gradientStartPosition;
@property (nonatomic) enum UICircularProgressRingGradientPosition gradientEndPosition;
@property (nonatomic) CGFloat startAngle;
@property (nonatomic) CGFloat endAngle;
@property (nonatomic) CGFloat outerRingWidth;
@property (nonatomic, strong) UIColor * _Nonnull outerRingColor;
@property (nonatomic) CGLineCap outerCapStyle;
@property (nonatomic) CGFloat innerRingWidth;
@property (nonatomic, strong) UIColor * _Nonnull innerRingColor;
@property (nonatomic) CGLineCap innerCapStyle;
@property (nonatomic) CGFloat innerRingSpacing;
@property (nonatomic) BOOL shouldShowValueText;
@property (nonatomic, strong) UIColor * _Nonnull fontColor;
@property (nonatomic, strong) UIFont * _Nonnull font;
@property (nonatomic, copy) NSString * _Nonnull valueIndicator;
@property (nonatomic) BOOL showFloatingPoint;
@property (nonatomic) NSInteger decimalPlaces;
@property (nonatomic, weak) UICircularProgressRingView * _Nullable valueDelegate;
/// Overriden for custom drawing.
/// Draws the outer ring, inner ring and value label.
- (void)drawInContext:(CGContextRef _Nonnull)ctx;
/// Watches for changes in the value property, and setNeedsDisplay accordingly
+ (BOOL)needsDisplayForKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
/// Creates animation when value property is changed
- (id <CAAction> _Nullable)actionForKey:(NSString * _Nonnull)event SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithLayer:(id _Nonnull)layer OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, UICircularProgressRingStyle, closed) {
/// Inner ring is inside the circle
  UICircularProgressRingStyleInside = 1,
/// Inner ring is placed ontop of the outer ring
  UICircularProgressRingStyleOntop = 2,
/// Outer ring is dashed
  UICircularProgressRingStyleDashed = 3,
/// Outer ring is dotted
  UICircularProgressRingStyleDotted = 4,
/// Inner ring is placed ontop of the outer ring and it has a gradient
  UICircularProgressRingStyleGradient = 5,
};


/// <h1>UICiruclarProgressRingView</h1>
/// This is the UIView subclass that creates and handles everything
/// to do with the progress ring
/// This class has a custom CAShapeLayer (UICircularProgressRingLayer) which
/// handels the drawing and animating of the view
/// The properties in this class correspond with the
/// properties in UICircularProgressRingLayer.
/// When they are set in here, they are also set for the layer and drawn accordingly
/// Read the docs for what each property does and what can be customized.
/// <h2>Author</h2>
/// Luis Padron
IB_DESIGNABLE
SWIFT_CLASS("_TtC15searchSortDummy26UICircularProgressRingView")
@interface UICircularProgressRingView : UIView
/// Whether or not the progress ring should be a full circle.
/// What this means is that the outer ring will always go from 0 - 360 degrees and
/// the inner ring will be calculated accordingly depending on current value.
/// <h2>Important</h2>
/// Default = true
/// When this property is true any value set for <code>endAngle</code> will be ignored.
/// <h2>Author</h2>
/// Luis Padron
@property (nonatomic) IBInspectable BOOL fullCircle;
/// The value property for the progress ring.
/// <h2>Important</h2>
/// Default = 0
/// Must be a non-negative value. If this value falls below <code>minValue</code> it will be
/// clamped and set equal to <code>minValue</code>.
/// This cannot be used to get the value while the ring is animating, to get
/// current value while animating use <code>currentValue</code>.
/// The current value of the progress ring after animating, use setProgress(value:)
/// to alter the value with the option to animate and have a completion handler.
/// <h2>Author</h2>
/// Luis Padron
@property (nonatomic) IBInspectable CGFloat value;
/// The minimum value for the progress ring. ex: (0) -> 100.
/// <h2>Important</h2>
/// Default = 100
/// Must be a non-negative value, the absolute value is taken when setting this property.
/// The <code>value</code> of the progress ring must NOT fall below <code>minValue</code> if it does the <code>value</code> property is clamped
/// and will be set equal to <code>value</code>, you will receive a warning message in the console.
/// Making this value greater than
/// <h2>Author</h2>
/// Luis Padron
@property (nonatomic) IBInspectable CGFloat minValue;
/// The maximum value for the progress ring. ex: 0 -> (100)
/// <h2>Important</h2>
/// Default = 100
/// Must be a non-negative value, the absolute value is taken when setting this property.
/// Unlike the <code>minValue</code> member <code>value</code> can extend beyond <code>maxValue</code>. What happens in this case
/// is the inner ring will do an extra loop through the outer ring, this is not noticible however.
/// <h2>Author</h2>
/// Luis Padron
@property (nonatomic) IBInspectable CGFloat maxValue;
/// Variable for the style of the progress ring.
/// Range: [1,5]
/// The four styles are
/// <ul>
///   <li>
///     1: Radius of the inner ring is smaller (inner ring inside outer ring)
///   </li>
///   <li>
///     2: Radius of inner ring is equal to outer ring (both at same location)
///   </li>
///   <li>
///     3: Radius of inner ring is equal to outer ring, and the outer ring is dashed
///   </li>
///   <li>
///     4: Radius of inner ring is equal to outer ring, and the outer ring is dotted
///   </li>
///   <li>
///     5: Radius of inner ring is equal to outer ring, and inner ring has gradient
///   </li>
/// </ul>
/// <h2>Important</h2>
/// THIS IS ONLY TO BE USED WITH INTERFACE BUILDER
/// The reason for this is IB has no support for enumerations as of yet
/// <h2>Author</h2>
/// Luis Padron
@property (nonatomic) IBInspectable NSInteger ibRingStyle;
/// The start angle for the entire progress ring view.
/// Please note that Cocoa Touch uses a clockwise rotating unit circle.
/// I.e: 90 degrees is at the bottom and 270 degrees is at the top
/// <h2>Important</h2>
/// Default = 0 (degrees)
/// Values should be in degrees (they’re converted to radians internally)
/// <h2>Author</h2>
/// Luis Padron
@property (nonatomic) IBInspectable CGFloat startAngle;
/// The end angle for the entire progress ring
/// Please note that Cocoa Touch uses a clockwise rotating unit circle.
/// I.e: 90 degrees is at the bottom and 270 degrees is at the top
/// <h2>Important</h2>
/// Default = 360 (degrees)
/// Values should be in degrees (they’re converted to radians internally)
/// <h2>Author</h2>
/// Luis Padron
@property (nonatomic) IBInspectable CGFloat endAngle;
/// The width of the outer ring for the progres bar
/// <h2>Important</h2>
/// Default = 10.0
/// <h2>Author</h2>
/// Luis Padron
@property (nonatomic) IBInspectable CGFloat outerRingWidth;
/// The color for the outer ring
/// <h2>Important</h2>
/// Default = UIColor.gray
/// <h2>Author</h2>
/// Luis Padron
@property (nonatomic, strong) IBInspectable UIColor * _Nonnull outerRingColor;
/// The style for the outer ring end cap (how it is drawn on screen)
/// Range [1,3]
/// <ul>
///   <li>
///     1: Line with a squared off end
///   </li>
///   <li>
///     2: Line with a rounded off end
///   </li>
///   <li>
///     3: Line with a square end
///   </li>
///   <li>
///     <1 & >3: Defaults to style 1
///   </li>
/// </ul>
/// <h2>Important</h2>
/// THIS IS ONLY TO BE USED WITH INTERFACE BUILDER
/// Default = 1
/// <h2>Author</h2>
/// Luis Padron
@property (nonatomic) IBInspectable int32_t outerRingCapStyle;
/// The width of the inner ring for the progres bar
/// <h2>Important</h2>
/// Default = 5.0
/// <h2>Author</h2>
/// Luis Padron
@property (nonatomic) IBInspectable CGFloat innerRingWidth;
/// The color of the inner ring for the progres bar
/// <h2>Important</h2>
/// Default = UIColor.blue
/// <h2>Author</h2>
/// Luis Padron
@property (nonatomic, strong) IBInspectable UIColor * _Nonnull innerRingColor;
/// The spacing between the outer ring and inner ring
/// <h2>Important</h2>
/// This only applies when using progressRingStyle = 1
/// Default = 1
/// <h2>Author</h2>
/// Luis Padron
@property (nonatomic) IBInspectable CGFloat innerRingSpacing;
/// The style for the inner ring end cap (how it is drawn on screen)
/// Range [1,3]
/// <ul>
///   <li>
///     1: Line with a squared off end
///   </li>
///   <li>
///     2: Line with a rounded off end
///   </li>
///   <li>
///     3: Line with a square end
///   </li>
///   <li>
///     <1 & >3: Defaults to style 2
///   </li>
/// </ul>
/// <h2>Important</h2>
/// THIS IS ONLY TO BE USED WITH INTERFACE BUILDER
/// Default = 2
/// <h2>Author</h2>
/// Luis Padron
@property (nonatomic) IBInspectable int32_t innerRingCapStyle;
/// A toggle for showing or hiding the value label.
/// If false the current value will not be shown.
/// <h2>Important</h2>
/// Default = true
/// <h2>Author</h2>
/// Luis Padron
@property (nonatomic) IBInspectable BOOL shouldShowValueText;
/// The text color for the value label field
/// <h2>Important</h2>
/// Default = UIColor.black
/// <h2>Author</h2>
/// Luis Padron
@property (nonatomic, strong) IBInspectable UIColor * _Nonnull fontColor;
/// The font to be used for the progress indicator.
/// All font attributes are specified here except for font color, which is done
/// using <code>fontColor</code>.
/// <h2>Important</h2>
/// Default = UIFont.systemFont(ofSize: 18)
/// <h2>Author</h2>
/// Luis Padron
@property (nonatomic, strong) IBInspectable UIFont * _Nonnull font;
/// The name of the value indicator the value label will
/// appened to the value
/// Example: “ GB” -> “100 GB”
/// <h2>Important</h2>
/// Default = “%”
/// <h2>Author</h2>
/// Luis Padron
@property (nonatomic, copy) IBInspectable NSString * _Nonnull valueIndicator;
/// A toggle for showing or hiding floating points from
/// the value in the value label
/// <h2>Important</h2>
/// Default = false (dont show)
/// To customize number of decmial places to show, assign a value to decimalPlaces.
/// <h2>Author</h2>
/// Luis Padron
@property (nonatomic) IBInspectable BOOL showFloatingPoint;
/// The amount of decimal places to show in the value label
/// <h2>Important</h2>
/// Default = 2
/// Only used when showFloatingPoint = true
/// <h2>Author</h2>
/// Luis Padron
@property (nonatomic) IBInspectable NSInteger decimalPlaces;
/// Overrides the default layer with the custom UICircularProgressRingLayer class
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) Class _Nonnull layerClass;)
+ (Class _Nonnull)layerClass SWIFT_WARN_UNUSED_RESULT;
/// Overriden public init to initialize the layer and view
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
/// Overriden public init to initialize the layer and view
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
/// Overriden because of custom layer drawing in UICircularProgressRingLayer
- (void)drawRect:(CGRect)rect;
@end








@interface UIImage (SWIFT_EXTENSION(searchSortDummy))
+ (UIImage * _Nullable)keyboardPreviousiOS9Image SWIFT_WARN_UNUSED_RESULT;
+ (UIImage * _Nullable)keyboardNextiOS9Image SWIFT_WARN_UNUSED_RESULT;
+ (UIImage * _Nullable)keyboardPreviousiOS10Image SWIFT_WARN_UNUSED_RESULT;
+ (UIImage * _Nullable)keyboardNextiOS10Image SWIFT_WARN_UNUSED_RESULT;
+ (UIImage * _Nullable)keyboardPreviousImage SWIFT_WARN_UNUSED_RESULT;
+ (UIImage * _Nullable)keyboardNextImage SWIFT_WARN_UNUSED_RESULT;
@end







@interface UILabel (SWIFT_EXTENSION(searchSortDummy))
- (void)drawRect:(CGRect)rect;
@property (nonatomic, readonly) CGSize intrinsicContentSize;
@end



@interface UIScrollView (SWIFT_EXTENSION(searchSortDummy))
/// If YES, then scrollview will ignore scrolling (simply not scroll it) for adjusting textfield position. Default is NO.
@property (nonatomic) BOOL shouldIgnoreScrollingAdjustment;
/// If YES, then scrollview will ignore content inset adjustment (simply not updating it) when keyboard is shown. Default is NO.
@property (nonatomic) BOOL shouldIgnoreContentInsetAdjustment;
/// To set customized distance from keyboard for textField/textView. Can’t be less than zero
@property (nonatomic) BOOL shouldRestoreScrollViewContentOffset;
@end





@interface UIView (SWIFT_EXTENSION(searchSortDummy))
@property (nonatomic) IBInspectable CGFloat cornerRadiusView;
@end




@interface UIView (SWIFT_EXTENSION(searchSortDummy))
/// To set customized distance from keyboard for textField/textView. Can’t be less than zero
@property (nonatomic) CGFloat keyboardDistanceFromTextField;
/// If shouldIgnoreSwitchingByNextPrevious is true then library will ignore this textField/textView while moving to other textField/textView using keyboard toolbar next previous buttons. Default is false
@property (nonatomic) BOOL ignoreSwitchingByNextPrevious;
@property (nonatomic) enum IQEnableMode enableMode;
/// Override resigns Keyboard on touching outside of UITextField/View behaviour for this particular textField.
@property (nonatomic) enum IQEnableMode shouldResignOnTouchOutsideMode;
@end

@class UISearchBar;

@interface UIView (SWIFT_EXTENSION(searchSortDummy))
/// Returns the UIViewController object that manages the receiver.
- (UIViewController * _Nullable)viewContainingController SWIFT_WARN_UNUSED_RESULT;
/// Returns the topMost UIViewController object in hierarchy.
- (UIViewController * _Nullable)topMostController SWIFT_WARN_UNUSED_RESULT;
/// Returns the UIViewController object that is actually the parent of this object. Most of the time it’s the viewController object which actually contains it, but result may be different if it’s viewController is added as childViewController of another viewController.
- (UIViewController * _Nullable)parentContainerViewController SWIFT_WARN_UNUSED_RESULT;
/// Returns the superView of provided class type.
/// @param classType class type of the object which is to be search in above hierarchy and return
/// @param belowView view object in upper hierarchy where method should stop searching and return nil
- (UIView * _Nullable)superviewOfClassType:(SWIFT_METATYPE(UIView) _Nonnull)classType belowView:(UIView * _Nullable)belowView SWIFT_WARN_UNUSED_RESULT;
/// Returns all siblings of the receiver which canBecomeFirstResponder.
- (NSArray<UIView *> * _Nonnull)responderSiblings SWIFT_WARN_UNUSED_RESULT;
/// Returns all deep subViews of the receiver which canBecomeFirstResponder.
- (NSArray<UIView *> * _Nonnull)deepResponderViews SWIFT_WARN_UNUSED_RESULT;
/// Returns searchBar if receiver object is UISearchBarTextField, otherwise return nil.
- (UISearchBar * _Nullable)textFieldSearchBar SWIFT_WARN_UNUSED_RESULT;
/// Returns YES if the receiver object is UIAlertSheetTextField, otherwise return NO.
- (BOOL)isAlertViewTextField SWIFT_WARN_UNUSED_RESULT;
@end


@interface UIView (SWIFT_EXTENSION(searchSortDummy))
/// IQToolbar references for better customization control.
@property (nonatomic, readonly, strong) IQToolbar * _Nonnull keyboardToolbar;
/// If <code>shouldHideToolbarPlaceholder</code> is YES, then title will not be added to the toolbar. Default to NO.
@property (nonatomic) BOOL shouldHideToolbarPlaceholder;
/// <code>toolbarPlaceholder</code> to override default <code>placeholder</code> text when drawing text on toolbar.
@property (nonatomic, copy) NSString * _Nullable toolbarPlaceholder;
/// <code>drawingToolbarPlaceholder</code> will be actual text used to draw on toolbar. This would either <code>placeholder</code> or <code>toolbarPlaceholder</code>.
@property (nonatomic, readonly, copy) NSString * _Nullable drawingToolbarPlaceholder;
/// <hr/>
/// <h2>MARK: Common</h2>
- (void)addKeyboardToolbarWithTargetWithTarget:(id _Nullable)target titleText:(NSString * _Nullable)titleText rightBarButtonConfiguration:(IQBarButtonItemConfiguration * _Nullable)rightBarButtonConfiguration previousBarButtonConfiguration:(IQBarButtonItemConfiguration * _Nullable)previousBarButtonConfiguration nextBarButtonConfiguration:(IQBarButtonItemConfiguration * _Nullable)nextBarButtonConfiguration;
/// <hr/>
/// <h2>MARK: Right</h2>
- (void)addDoneOnKeyboardWithTarget:(id _Nullable)target action:(SEL _Nonnull)action shouldShowPlaceholder:(BOOL)shouldShowPlaceholder;
- (void)addDoneOnKeyboardWithTarget:(id _Nullable)target action:(SEL _Nonnull)action titleText:(NSString * _Nullable)titleText;
- (void)addRightButtonOnKeyboardWithImage:(UIImage * _Nonnull)image target:(id _Nullable)target action:(SEL _Nonnull)action shouldShowPlaceholder:(BOOL)shouldShowPlaceholder;
- (void)addRightButtonOnKeyboardWithImage:(UIImage * _Nonnull)image target:(id _Nullable)target action:(SEL _Nonnull)action titleText:(NSString * _Nullable)titleText;
- (void)addRightButtonOnKeyboardWithText:(NSString * _Nonnull)text target:(id _Nullable)target action:(SEL _Nonnull)action shouldShowPlaceholder:(BOOL)shouldShowPlaceholder;
- (void)addRightButtonOnKeyboardWithText:(NSString * _Nonnull)text target:(id _Nullable)target action:(SEL _Nonnull)action titleText:(NSString * _Nullable)titleText;
/// <hr/>
/// <h2>MARK: Right/Left</h2>
- (void)addCancelDoneOnKeyboardWithTarget:(id _Nullable)target cancelAction:(SEL _Nonnull)cancelAction doneAction:(SEL _Nonnull)doneAction shouldShowPlaceholder:(BOOL)shouldShowPlaceholder;
- (void)addRightLeftOnKeyboardWithTarget:(id _Nullable)target leftButtonTitle:(NSString * _Nonnull)leftButtonTitle rightButtonTitle:(NSString * _Nonnull)rightButtonTitle leftButtonAction:(SEL _Nonnull)leftButtonAction rightButtonAction:(SEL _Nonnull)rightButtonAction shouldShowPlaceholder:(BOOL)shouldShowPlaceholder;
- (void)addRightLeftOnKeyboardWithTarget:(id _Nullable)target leftButtonImage:(UIImage * _Nonnull)leftButtonImage rightButtonImage:(UIImage * _Nonnull)rightButtonImage leftButtonAction:(SEL _Nonnull)leftButtonAction rightButtonAction:(SEL _Nonnull)rightButtonAction shouldShowPlaceholder:(BOOL)shouldShowPlaceholder;
- (void)addCancelDoneOnKeyboardWithTarget:(id _Nullable)target cancelAction:(SEL _Nonnull)cancelAction doneAction:(SEL _Nonnull)doneAction titleText:(NSString * _Nullable)titleText;
- (void)addRightLeftOnKeyboardWithTarget:(id _Nullable)target leftButtonTitle:(NSString * _Nonnull)leftButtonTitle rightButtonTitle:(NSString * _Nonnull)rightButtonTitle leftButtonAction:(SEL _Nonnull)leftButtonAction rightButtonAction:(SEL _Nonnull)rightButtonAction titleText:(NSString * _Nullable)titleText;
- (void)addRightLeftOnKeyboardWithTarget:(id _Nullable)target leftButtonImage:(UIImage * _Nonnull)leftButtonImage rightButtonImage:(UIImage * _Nonnull)rightButtonImage leftButtonAction:(SEL _Nonnull)leftButtonAction rightButtonAction:(SEL _Nonnull)rightButtonAction titleText:(NSString * _Nullable)titleText;
/// <hr/>
/// <h2>MARK: Previous/Next/Right</h2>
- (void)addPreviousNextDoneOnKeyboardWithTarget:(id _Nullable)target previousAction:(SEL _Nonnull)previousAction nextAction:(SEL _Nonnull)nextAction doneAction:(SEL _Nonnull)doneAction shouldShowPlaceholder:(BOOL)shouldShowPlaceholder;
- (void)addPreviousNextRightOnKeyboardWithTarget:(id _Nullable)target rightButtonImage:(UIImage * _Nonnull)rightButtonImage previousAction:(SEL _Nonnull)previousAction nextAction:(SEL _Nonnull)nextAction rightButtonAction:(SEL _Nonnull)rightButtonAction shouldShowPlaceholder:(BOOL)shouldShowPlaceholder;
- (void)addPreviousNextRightOnKeyboardWithTarget:(id _Nullable)target rightButtonTitle:(NSString * _Nonnull)rightButtonTitle previousAction:(SEL _Nonnull)previousAction nextAction:(SEL _Nonnull)nextAction rightButtonAction:(SEL _Nonnull)rightButtonAction shouldShowPlaceholder:(BOOL)shouldShowPlaceholder;
- (void)addPreviousNextDoneOnKeyboardWithTarget:(id _Nullable)target previousAction:(SEL _Nonnull)previousAction nextAction:(SEL _Nonnull)nextAction doneAction:(SEL _Nonnull)doneAction titleText:(NSString * _Nullable)titleText;
- (void)addPreviousNextRightOnKeyboardWithTarget:(id _Nullable)target rightButtonImage:(UIImage * _Nonnull)rightButtonImage previousAction:(SEL _Nonnull)previousAction nextAction:(SEL _Nonnull)nextAction rightButtonAction:(SEL _Nonnull)rightButtonAction titleText:(NSString * _Nullable)titleText;
- (void)addPreviousNextRightOnKeyboardWithTarget:(id _Nullable)target rightButtonTitle:(NSString * _Nonnull)rightButtonTitle previousAction:(SEL _Nonnull)previousAction nextAction:(SEL _Nonnull)nextAction rightButtonAction:(SEL _Nonnull)rightButtonAction titleText:(NSString * _Nullable)titleText;
@end


@interface UIViewController (SWIFT_EXTENSION(searchSortDummy))
- (UIViewController * _Nullable)parentIQContainerViewController SWIFT_WARN_UNUSED_RESULT;
@end

@class UIStoryboardSegue;

@interface UIViewController (SWIFT_EXTENSION(searchSortDummy))
- (IBAction)unwindToViewController:(UIStoryboardSegue * _Nonnull)segue;
@end


@interface UIViewController (SWIFT_EXTENSION(searchSortDummy))
/// To set customized distance from keyboard for textField/textView. Can’t be less than zero
/// @deprecated    Due to change in core-logic of handling distance between textField and keyboard distance, this layout contraint tweak is no longer needed and things will just work out of the box regardless of constraint pinned with safeArea/layoutGuide/superview
@property (nonatomic, strong) IBOutlet NSLayoutConstraint * _Nullable IQLayoutGuideConstraint SWIFT_DEPRECATED_MSG("Due to change in core-logic of handling distance between textField and keyboard distance, this layout contraint tweak is no longer needed and things will just work out of the box regardless of constraint pinned with safeArea/layoutGuide/superview.");
@end



SWIFT_CLASS("_TtC15searchSortDummy14ViewController")
@interface ViewController : UIViewController
- (void)viewDidLoad;
- (void)didReceiveMemoryWarning;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class UICollectionView;

SWIFT_CLASS("_TtC15searchSortDummy18YearWiseTrackingVC")
@interface YearWiseTrackingVC : UIViewController
@property (nonatomic, weak) IBOutlet UICollectionView * _Null_unspecified yearItmCollectionVw;
@property (nonatomic, weak) IBOutlet UITableView * _Null_unspecified monthItmTablVw;
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified monthTitleLabl;
- (void)viewDidLoad;
- (IBAction)tapOnBackBtn:(id _Nonnull)sender;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end




@interface YearWiseTrackingVC (SWIFT_EXTENSION(searchSortDummy)) <UITableViewDataSource, UITableViewDelegate>
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
@end

@class UICollectionViewLayout;

@interface YearWiseTrackingVC (SWIFT_EXTENSION(searchSortDummy)) <UICollectionViewDataSource, UICollectionViewDelegateFlowLayout>
- (NSInteger)collectionView:(UICollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (CGSize)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout sizeForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didSelectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end


SWIFT_CLASS("_TtC15searchSortDummy3cfg")
@interface cfg : UIViewController
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class NSURLSession;
@class NSURLSessionDownloadTask;
@class NSURLSessionTask;

SWIFT_CLASS("_TtC15searchSortDummy11dashboardVC")
@interface dashboardVC : UIViewController <NSURLSessionDownloadDelegate>
@property (nonatomic, weak) IBOutlet SpringView * _Null_unspecified inspireview;
@property (nonatomic, weak) IBOutlet SpringView * _Null_unspecified moreView;
@property (nonatomic, weak) IBOutlet SpringImageView * _Null_unspecified imgView1;
@property (nonatomic, weak) IBOutlet SpringImageView * _Null_unspecified imgView2;
@property (nonatomic, weak) IBOutlet SpringImageView * _Null_unspecified imgView3;
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified btnSK1;
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified btnSK2;
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified btnSK3;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (IBAction)btnLogOutAction:(id _Nonnull)sender;
- (IBAction)btnSK1Action:(id _Nonnull)sender;
- (IBAction)btnSK2Action:(id _Nonnull)sender;
- (IBAction)btnErgAction:(UIButton * _Nonnull)sender;
- (IBAction)btnPreferenceAcrion:(id _Nonnull)sender;
- (IBAction)btnInspireAction:(UIButton * _Nonnull)sender;
- (IBAction)btnMoreAction:(UIButton * _Nonnull)sender;
- (void)prepareForSegue:(UIStoryboardSegue * _Nonnull)segue sender:(id _Nullable)sender;
- (void)URLSession:(NSURLSession * _Nonnull)session downloadTask:(NSURLSessionDownloadTask * _Nonnull)downloadTask didFinishDownloadingToURL:(NSURL * _Nonnull)location;
- (void)URLSession:(NSURLSession * _Nonnull)session downloadTask:(NSURLSessionDownloadTask * _Nonnull)downloadTask didWriteData:(int64_t)bytesWritten totalBytesWritten:(int64_t)totalBytesWritten totalBytesExpectedToWrite:(int64_t)totalBytesExpectedToWrite;
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didCompleteWithError:(NSError * _Nullable)error;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC15searchSortDummy10feedbackVC")
@interface feedbackVC : UIViewController <UITextViewDelegate>
@property (nonatomic, weak) IBOutlet UITextView * _Null_unspecified txtmsgs;
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified btnLogin;
- (void)viewDidLoad;
- (void)didReceiveMemoryWarning;
- (IBAction)btnSaveAction:(UIButton * _Nonnull)sender;
- (void)textViewDidChange:(UITextView * _Nonnull)textView;
- (IBAction)btnBackAction:(id _Nonnull)sender;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC15searchSortDummy6moreVC")
@interface moreVC : UIViewController
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified lblsk1Count;
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified lblsk1Target;
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified lblsk2Count;
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified lblsk2Target;
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified lblEngCount;
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified lblEngTarget;
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified lblUserName;
@property (nonatomic, weak) IBOutlet SpringView * _Null_unspecified view1;
@property (nonatomic, weak) IBOutlet SpringView * _Null_unspecified view2;
@property (nonatomic, weak) IBOutlet SpringView * _Null_unspecified view3;
- (void)viewDidLoad;
- (IBAction)btnMedidateAction:(UIButton * _Nonnull)sender;
- (IBAction)btnSubmitLogAction:(UIButton * _Nonnull)sender;
- (IBAction)btnReviewThisMonthAction:(UIButton * _Nonnull)sender;
- (IBAction)btnReviewThisYearAction:(UIButton * _Nonnull)sender;
- (IBAction)btnSpecialAudiosAction:(id _Nonnull)sender;
- (IBAction)btnGoToSRMYoutubeChannelAction:(UIButton * _Nonnull)sender;
- (IBAction)btnLogoutAction:(UIButton * _Nonnull)sender;
- (IBAction)btnPreferenceAction:(UIButton * _Nonnull)sender;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class UIActivityIndicatorView;

SWIFT_CLASS("_TtC15searchSortDummy18otherMeditationTVC")
@interface otherMeditationTVC : UITableViewCell
@property (nonatomic, weak) IBOutlet UIImageView * _Null_unspecified imgBg;
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified lblName;
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified lblDuration;
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified lblDescription;
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified lblSize;
@property (nonatomic, weak) IBOutlet UIView * _Null_unspecified vewHolder;
@property (nonatomic, weak) IBOutlet UIActivityIndicatorView * _Null_unspecified indicatorActv;
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified lblDownload;
@property (nonatomic, weak) IBOutlet UIImageView * _Null_unspecified btnControl;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=3.0);
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class UIProgressView;
@class AVAudioPlayer;

SWIFT_CLASS("_TtC15searchSortDummy17otherMeditationVC")
@interface otherMeditationVC : UIViewController <AVAudioPlayerDelegate, NSURLSessionDownloadDelegate, UITableViewDataSource, UITableViewDelegate>
@property (nonatomic, weak) IBOutlet UITableView * _Null_unspecified tableMeditation;
@property (nonatomic, weak) IBOutlet UIView * _Null_unspecified viewContainerBottom;
@property (nonatomic, weak) IBOutlet UIImageView * _Null_unspecified imgVwBottom;
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified lblBottomDesc;
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified btnPlayPauseBottom;
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified lblTitleBottom;
@property (nonatomic, weak) IBOutlet NSLayoutConstraint * _Null_unspecified bottomViewHeightConstarint;
@property (nonatomic, weak) IBOutlet NSLayoutConstraint * _Null_unspecified btnPlayBottomHeightConstarint;
@property (nonatomic, weak) IBOutlet NSLayoutConstraint * _Null_unspecified lblTitleBottomHeightConstarint;
@property (nonatomic, weak) IBOutlet NSLayoutConstraint * _Null_unspecified lblTitleBottomTopConstarint;
@property (nonatomic, weak) IBOutlet NSLayoutConstraint * _Null_unspecified lblTitleBottomBelowConstarint;
@property (nonatomic, weak) IBOutlet NSLayoutConstraint * _Null_unspecified lblDescBottomBelowConstarint;
@property (nonatomic, weak) IBOutlet NSLayoutConstraint * _Null_unspecified tblBottomHeightConstarint;
@property (nonatomic, weak) IBOutlet UIView * _Null_unspecified viewContainerFullView;
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified lblTitleFullContainer;
@property (nonatomic, weak) IBOutlet UIImageView * _Null_unspecified imgVwFullContainer;
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified lblAudioProgress;
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified lblAudioLength;
@property (nonatomic, weak) IBOutlet UIProgressView * _Null_unspecified progressBarFullContainer;
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified btnPrevFullContainer;
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified btnPlayPauseFullContainer;
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified btnNextFullContainer;
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified lblTitleFullView;
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified lblDescFullView;
- (void)viewDidLoad;
- (void)viewDidDisappear:(BOOL)animated;
- (IBAction)btnBackAction:(id _Nonnull)sender;
- (NSInteger)numberOfSectionsInTableView:(UITableView * _Nonnull)tableView SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView estimatedHeightForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)URLSession:(NSURLSession * _Nonnull)session downloadTask:(NSURLSessionDownloadTask * _Nonnull)downloadTask didFinishDownloadingToURL:(NSURL * _Nonnull)location;
- (void)URLSession:(NSURLSession * _Nonnull)session downloadTask:(NSURLSessionDownloadTask * _Nonnull)downloadTask didWriteData:(int64_t)bytesWritten totalBytesWritten:(int64_t)totalBytesWritten totalBytesExpectedToWrite:(int64_t)totalBytesExpectedToWrite;
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didCompleteWithError:(NSError * _Nullable)error;
- (void)updateTime;
- (void)audioPlayerDidFinishPlaying:(AVAudioPlayer * _Nonnull)player successfully:(BOOL)flag;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end



@interface otherMeditationVC (SWIFT_EXTENSION(searchSortDummy))
- (IBAction)backButtonContainerClicked:(id _Nonnull)sender;
- (IBAction)btnPlayPauseBottomViewClicked:(id _Nonnull)sender;
- (IBAction)btnPlayPauseFullViewClicked:(id _Nonnull)sender;
- (IBAction)btnPrevFullViewClicked:(id _Nonnull)sender;
- (IBAction)btnNextFullViewClicked:(id _Nonnull)sender;
- (void)handleTap:(UITapGestureRecognizer * _Nonnull)sender;
@end


SWIFT_CLASS("_TtC15searchSortDummy8playerVC")
@interface playerVC : UIViewController <AVAudioPlayerDelegate>
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified playedTime;
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified lblHead;
@property (nonatomic, weak) IBOutlet UIImageView * _Null_unspecified imgBg;
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified lblPlayPause;
@property (nonatomic, weak) IBOutlet UIView * _Null_unspecified vewVol;
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified btnPlay;
@property (nonatomic, weak) IBOutlet UIProgressView * _Null_unspecified volProgess;
- (void)viewDidLoad;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (IBAction)btnBackActionWithSender:(id _Nonnull)sender;
- (IBAction)btnPlusAction:(id _Nonnull)sender;
- (IBAction)btnMinusAction:(id _Nonnull)sender;
- (IBAction)playOrPauseMusicWithSender:(id _Nonnull)sender;
- (void)updateTime;
- (void)audioPlayerDidFinishPlaying:(AVAudioPlayer * _Nonnull)player successfully:(BOOL)flag;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class MFMailComposeViewController;

SWIFT_CLASS("_TtC15searchSortDummy12preferenceVC")
@interface preferenceVC : UIViewController <MFMailComposeViewControllerDelegate>
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified lblLogName;
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified lblVersion;
- (void)viewDidLoad;
- (void)didReceiveMemoryWarning;
- (IBAction)btnFeedback:(id _Nonnull)sender;
- (IBAction)btnCancelReminder:(id _Nonnull)sender;
- (IBAction)btnBackAction:(id _Nonnull)sender;
- (IBAction)btnReminderAction:(id _Nonnull)sender;
- (IBAction)btnTermAndConditionAction:(id _Nonnull)sender;
- (void)mailComposeController:(MFMailComposeViewController * _Nonnull)controller didFinishWithResult:(MFMailComposeResult)result error:(NSError * _Nullable)error;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC15searchSortDummy8splashVC")
@interface splashVC : UIViewController
- (void)viewDidLoad;
- (void)viewDidAppear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC15searchSortDummy14uploadTargetVC")
@interface uploadTargetVC : UIViewController
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified btnSk1;
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified btnSk2;
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified btnEng;
- (void)viewDidLoad;
- (IBAction)btnBackAction:(UIButton * _Nonnull)sender;
- (IBAction)btnSk1Action:(UIButton * _Nonnull)sender;
- (IBAction)btnSk2Action:(UIButton * _Nonnull)sender;
- (IBAction)btnEngAction:(UIButton * _Nonnull)sender;
- (IBAction)btnUploadAction:(UIButton * _Nonnull)sender;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC15searchSortDummy13viewResources")
@interface viewResources : UIViewController <WKUIDelegate>
@property (nonatomic, weak) IBOutlet UIView * _Null_unspecified viewNavBar;
- (void)viewDidLoad;
- (IBAction)btnBackAction:(id _Nonnull)sender;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC15searchSortDummy14yearlyReviewVC")
@interface yearlyReviewVC : UIViewController <UITableViewDataSource, UITableViewDelegate>
@property (nonatomic, weak) IBOutlet UITableView * _Null_unspecified yearTable;
- (void)viewDidLoad;
- (void)didReceiveMemoryWarning;
- (IBAction)btnDismissAction:(id _Nonnull)sender;
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC15searchSortDummy9yearlyTVC")
@interface yearlyTVC : UITableViewCell
@property (nonatomic, weak) IBOutlet UIView * _Null_unspecified parentView;
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified lblMonth;
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified lblSwaraj;
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified lblSwaraj2;
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified lblEnergization;
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified lblInterruptions;
@property (nonatomic, weak) IBOutlet UIView * _Null_unspecified vewContainer;
- (void)awakeFromNib;
- (void)setSelected:(BOOL)selected animated:(BOOL)animated;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=3.0);
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif
